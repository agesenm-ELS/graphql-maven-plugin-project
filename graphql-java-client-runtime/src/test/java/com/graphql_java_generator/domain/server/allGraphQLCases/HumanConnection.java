/** Generated by the default template from graphql-java-generator */
package com.graphql_java_generator.domain.server.allGraphQLCases;

import java.util.List;

import com.graphql_java_generator.annotation.GraphQLNonScalar;
import com.graphql_java_generator.annotation.GraphQLObjectType;

/**
 *
 * @author generated by graphql-java-generator
 * @see <a href=
 *      "https://github.com/graphql-java-generator/graphql-java-generator">https://github.com/graphql-java-generator/graphql-java-generator</a>
 */
@GraphQLObjectType("HumanConnection")
public class HumanConnection {

	public HumanConnection() {
		// No action
	}

	@GraphQLNonScalar(fieldName = "edges", graphQLTypeSimpleName = "HumanEdge", javaClass = HumanEdge.class)
	List<HumanEdge> edges;

	@GraphQLNonScalar(fieldName = "pageInfo", graphQLTypeSimpleName = "PageInfo", javaClass = PageInfo.class)
	PageInfo pageInfo;

	public void setEdges(List<HumanEdge> edges) {
		this.edges = edges;
	}

	public List<HumanEdge> getEdges() {
		return edges;
	}

	public void setPageInfo(PageInfo pageInfo) {
		this.pageInfo = pageInfo;
	}

	public PageInfo getPageInfo() {
		return pageInfo;
	}

	@Override
	public String toString() {
		return "HumanConnection {" + "edges: " + edges + ", " + "pageInfo: " + pageInfo + "}";
	}

	public static Builder builder() {
		return new Builder();
	}

	/**
	 * Builder
	 */
	public static class Builder {
		private List<HumanEdge> edges;
		private PageInfo pageInfo;

		public Builder withEdges(List<HumanEdge> edges) {
			this.edges = edges;
			return this;
		}

		public Builder withPageInfo(PageInfo pageInfo) {
			this.pageInfo = pageInfo;
			return this;
		}

		public HumanConnection build() {
			HumanConnection _object = new HumanConnection();
			_object.setEdges(edges);
			_object.setPageInfo(pageInfo);
			return _object;
		}
	}
}
